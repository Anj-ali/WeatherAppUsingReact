{"version":3,"sources":["components/CityInput/index.js","components/CityWeather/index.js","App.js","reportWebVitals.js","index.js"],"names":["CityInput","city","setCity","fetchCityWeather","setClick","click","React","useState","error","setError","Container","Form","Group","controlId","Label","Control","value","type","placeholder","onChange","event","target","className","Button","variant","onClick","CityWeather","cityWeather","humidity","setHumidity","temperature","setTemperature","minTemperature","setMinTemperature","maxTemperature","setMaxTemperature","windSpeed","setWindSpeed","useEffect","console","log","hasOwnProperty","name","main","temp","toFixed","temp_min","temp_max","wind","speed","App","setCityWeather","fetch","then","response","json","result","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.875579f2.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Button, Container, Form} from \"react-bootstrap\";\r\n\r\nconst CityInput = ({city,setCity,fetchCityWeather,click,setClick}) => {\r\n  const [error,setError]=React.useState(\"\");\r\n\r\n  const handleInputChange=(event)=>{\r\n    setCity(event.target.value);\r\n  };\r\n\r\n  // console.log(\"City is \",city);\r\n  const handleSubmit=(event)=>{\r\n    setClick(true);\r\n    if(!city){\r\n      // alert(\"Field is empty\");\r\n      setError(\"City field is empty\");\r\n    }else{\r\n      setError(\"\");\r\n      // Make API call\r\n      fetchCityWeather();\r\n    }\r\n  };\r\n  return (\r\n  <Container>\r\n    <Form>\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>City</Form.Label>\r\n        <Form.Control \r\n          value={city}\r\n          type=\"text\" \r\n          placeholder=\"Enter city\" \r\n          onChange={handleInputChange}\r\n        />\r\n        <p className=\"text-danger\">{error}</p>\r\n      </Form.Group>\r\n\r\n      <Button variant=\"primary\" onClick={handleSubmit}>\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  </Container>\r\n  );\r\n};\r\n\r\nexport default CityInput;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nconst CityWeather = ({cityWeather,click}) => {\r\n    // console.log(\"abcd\",weatherDes);\r\n    const [city,setCity]=React.useState(\"\");\r\n    const [humidity,setHumidity]=React.useState(\"\");\r\n    const [temperature,setTemperature]=React.useState(\"\"); \r\n    const [minTemperature,setMinTemperature]=React.useState(\"\");\r\n    const [maxTemperature,setMaxTemperature]=React.useState(\"\");\r\n    const [windSpeed,setWindSpeed]=React.useState(\"\");\r\n\r\n    React.useEffect(()=>{\r\n        console.log(\"city Weather \",cityWeather);\r\n        if(click && cityWeather.hasOwnProperty('weather')){\r\n            setCity(cityWeather.name);\r\n            setHumidity(cityWeather.main.humidity+\" %\");\r\n            setTemperature((cityWeather.main.temp-273.15).toFixed(2)+` \\u00b0C`);\r\n            setMinTemperature((cityWeather.main.temp_min-273.15).toFixed(2)+` \\u00b0C`);\r\n            setMaxTemperature((cityWeather.main.temp_max-273.15).toFixed(2)+` \\u00b0C`);\r\n            setWindSpeed((cityWeather.wind.speed)+\" km/h\");\r\n        }\r\n    })\r\n    return (\r\n        <Container>\r\n            <div>\r\n                <div className=\"d-flex justify-content-between flex-wrap\">\r\n                    <p>City Name: {city}</p>\r\n                    <p>Humidity: {humidity}</p>\r\n                    <p>Temperature: {temperature}</p>\r\n                    <p>Minimum Temperature: {minTemperature}</p>\r\n                    <p>Maximum Temperature: {maxTemperature}</p>\r\n                    <p>Wind Speed: {windSpeed}</p>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CityWeather","import './App.css';\nimport React from \"react\";\nimport CityInput from './components/CityInput';\nimport CityWeather from './components/CityWeather';\n\nfunction App() {\n  const [city,setCity]=React.useState(\"\");\n  const [cityWeather,setCityWeather]=React.useState({});\n  const [click,setClick]=React.useState(false);\n  \n  const fetchCityWeather=()=>{\n    fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=963424f43671e87392a23f7c94544f2c`\n    )\n      .then((response) => response.json())\n      .then((result)=>{\n        // console.log(\"Result is result\",result);\n        setCityWeather(result);\n      })\n      .catch((error)=>{\n        console.log(\"Error is \",error);\n      })\n  }\n  return (\n    <>\n      <h3 className=\"text-center text-info text-danger\">Weather App</h3>\n      <CityInput \n        city={city} \n        setCity={setCity} \n        fetchCityWeather={fetchCityWeather} \n        click={click}\n        setClick={setClick}\n      />\n      <CityWeather cityWeather={cityWeather} click={click} />\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}